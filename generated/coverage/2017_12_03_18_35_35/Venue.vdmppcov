class Venue
	types
			public String = seq of char;

	instance variables
			private name : String;
			private location : [Location];
			private description : String;
			private shows: set of Show := {};

	operations
			
			-- Create a Venue object with all given parameters --
			public Venue: String * Location * String ==> Venue
				Venue(n, l, d) == (name := n; location := l; description := d; return self)
				pre n <> [];
			
			-- GETS --
			
			-- Returns the name of the Venue object --
			public getName : () ==> String
				getName() == (return name);
				
			-- Returns the location of the Venue object --
			public getLocation : () ==> Location
				getLocation() == (return location);
			
			-- Returns the description of the Venue object --
			public getDescription : () ==> String
				getDescription() == (return description);
				
			-- Returns the shows of the Venue object --
			public getShows : () ==> set of Show
				getShows() == (return shows);
				
			-- SETS --
			
			-- Changes the name of the Venue object --
			public setName : String ==> ()
				setName(n) == (name := n; return);
				
			-- Changes the location of the Venue object --
			public setLocation : Location ==> ()
				setLocation(l) == (location := l; return);
				
			-- Changes the description of the Venue object --
			public setDescription : String ==> ()
				setDescription(d) == (description := d; return);
				
			-- AUXILIARY FUNCTIONS --
			
			-- Add a show to Shows in the Venue object --
			public addShow : Show ==> ()
				addShow(s) == (shows := shows union {s}; return)
				pre s not in set shows
				post shows = {s} union shows~;
			
		 -- Remove a show from Shows in the Venue object --
		 public removeShow : Show ==> ()
		 	removeShow(s) == (shows := shows \ {s}; return)
		 	pre s in set shows
		 	post {} = {s} inter shows;
		 				
end Venue

-- TEST CLASS FOR VENUE CLASS --

class VenueTest is subclass of TestSuiteJyve
instance variables
			d1 : DateTime := new DateTime(2017, 12, 01, 23, 30);
			d2 : DateTime := new DateTime(2017, 12, 02, 04, 00);
			d3 : DateTime := new DateTime(2017, 12, 03, 23, 30);
			d4 : DateTime := new DateTime(2017, 12, 04, 04, 00);
			l1 : Location := new Location("New Jersey", "New York");
			l2 : Location := new Location("Los Angeles", "California");
			v1 : Venue := new Venue("New Jersey's Cool Bar", l1, "New Jersey's best bar!");
			v2 : Venue := new Venue("LA's Laking Bar", l2, "Come see our lack of lakes!");
			s1 : Show := new Show(d1, d2, v1, "Concert up buds!");
			s2 : Show := new Show(d3, d4, v2, "Concert up in another club!");
	
operations

			private testaddShow: () ==> ()
				testaddShow() == (
					v1.addShow(s1);
					v2.addShow(s2);
				);

			-- GETS --
			private testgetName: () ==> ()
				testgetName() == (
					assertEqual(v1.getName(), "New Jersey's Cool Bar");
					assertEqual(v2.getName(), "LA's Laking Bar");
				);
			
			private testgetLocation: () ==> ()
				testgetLocation() == (
					assertEqual(v1.getLocation(), l1);
					assertEqual(v2.getLocation(), l2);
				);
				
			private testgetDescription: () ==> ()
				testgetDescription() == (
					assertEqual(v1.getDescription(), "New Jersey's best bar!");
					assertEqual(v2.getDescription(), "Come see our lack of lakes!");
				);
				
			private testgetShows: () ==> ()
				testgetShows() == (
					assertEqual(v1.getShows(), {s1});
					assertEqual(v2.getShows(), {s2});
				);
			
			-- SETS --
			private testsetName: () ==> ()
				testsetName() == (
					v1.setName("LA's Worst Bar");
					v2.setName("New Jersey's Non-Laking Bar");
				);
				
			private testsetLocation: () ==> ()
				testsetLocation() == (
					v1.setLocation(l2);
					v2.setLocation(l1);
				);
				
			private testsetDescription: () ==> ()
				testsetDescription() == (
					v1.setDescription("We shouldn't have moved...");
					v2.setDescription("At least our description makes sense!");
				);
	
			public static main: () ==> ()
	    	main() ==
	    	(
	    		dcl test : VenueTest := new VenueTest();
        	test.testaddShow();
        	test.testgetName();
        	test.testgetLocation();
        	test.testgetDescription();
        	test.testgetShows();
        	test.testsetName();
        	test.testsetLocation();
        	test.testsetDescription();
	    );

end VenueTest