class Show
	types
			public String = seq of char;

	instance variables
			private startdate : DateTime;
			private enddate : DateTime;
			private venue : Venue;
			private description : String;
			
	operations
			-- Create a Show object with all given parameters for an Artist or Band object --
			public Show : DateTime * DateTime * Venue * String ==> Show
				Show(dts, dte, v, desc) == (startdate := dts; enddate := dte; venue := v; description := desc; return self)
				pre dte.laterTime(dts);
			
			-- GETS --
			
			-- Returns the start date and time of the Show object --
			public getStartDate : () ==> DateTime
				getStartDate() == (return startdate);
				
			-- Returns the end hour of the Show object --
			public getEndDate : () ==> DateTime
				getEndDate() == (return enddate);
			
			-- Returns the venue of the Show object --
			public getVenue : () ==> Venue
				getVenue() == (return venue);
				
			-- Returns the description of the Show object --
			public getDescription : () ==> String
				getDescription() == (return description);
				
			-- SETS --
				
			-- Changes the description of the Show object --
			public setDescription : String ==> ()
				setDescription(d) == (description := d; return);
		
end Show

-- TEST CLASS FOR SHOW CLASS --

class ShowTest is subclass of TestSuiteJyve
	instance variables
			d1 : DateTime := new DateTime(2017, 12, 01, 23, 30);
			d2 : DateTime := new DateTime(2017, 12, 02, 04, 00);
			d3 : DateTime := new DateTime(2017, 12, 01, 23, 45);
			d4 : DateTime := new DateTime(2017, 12, 02, 03, 30);
			l1 : Location := new Location("New Jersey", "New York");
			l2 : Location := new Location("Los Angeles", "California");
			v1 : Venue := new Venue("New Jersey's Cool Bar", l1, "New Jersey's best bar!");
			v2 : Venue := new Venue("LA's Laking Bar", l2, "Come see our lack of lakes!");
			s1 : Show := new Show(d1, d2, v1, "Concert up buds!");
			s2 : Show := new Show(d3, d4, v2, "Concert up in another club!");
	
operations
			-- GETS --
			private testgetStartDate: () ==> ()
				testgetStartDate() == (
					assertEqual(s1.getStartDate(), d1);
					assertEqual(s2.getStartDate(), d3);
				);
			
			private testgetEndDate: () ==> ()
				testgetEndDate() == (
					assertEqual(s1.getEndDate(), d2);
					assertEqual(s2.getEndDate(), d4);
				);
				
			private testgetVenue: () ==> ()
				testgetVenue() == (
					assertEqual(s1.getVenue(), v1);
					assertEqual(s2.getVenue(), v2);
				);
			
			private testgetDescription: () ==> ()
				testgetDescription() == (
					assertEqual(s1.getDescription(), "Concert up buds!");
					assertEqual(s2.getDescription(), "Concert up in another club!");
				);
			
			-- SETS --
			private testsetDescription: () ==> ()
				testsetDescription() == (
					s1.setDescription("Why is the other show copying our description...");
					s2.setDescription("Because we can!");
				);
	
			public static main: () ==> ()
	    	main() ==
	    	(
	    		dcl test : ShowTest := new ShowTest();
        	test.testgetStartDate();
        	test.testgetEndDate();
        	test.testgetVenue();
        	test.testgetDescription();
        	test.testsetDescription();
	    );

end ShowTest